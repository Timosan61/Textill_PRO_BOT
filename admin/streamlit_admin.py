import streamlit as st
import json
import os
import sys
from datetime import datetime

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from bot.config import INSTRUCTION_FILE


def load_instruction():
    try:
        with open(INSTRUCTION_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        return {
            "system_instruction": "",
            "welcome_message": "",
            "last_updated": datetime.now().isoformat()
        }


def save_instruction(instruction_data):
    try:
        instruction_data["last_updated"] = datetime.now().isoformat()
        with open(INSTRUCTION_FILE, 'w', encoding='utf-8') as f:
            json.dump(instruction_data, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
        return False


def main():
    st.set_page_config(
        page_title="Textil PRO Bot Admin",
        page_icon="ü§ñ",
        layout="wide"
    )
    
    st.title("ü§ñ Textil PRO Bot - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")
    st.markdown("---")
    
    if not os.path.exists(INSTRUCTION_FILE):
        st.warning("‚ö†Ô∏è –§–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.")
    
    instruction_data = load_instruction()
    
    st.header("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞")
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.subheader("–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
        st.markdown("*–û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è AI-–∞–≥–µ–Ω—Ç–∞*")
        
        system_instruction = st.text_area(
            "–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:",
            value=instruction_data.get("system_instruction", ""),
            height=300,
            help="–≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–æ—Ç–∞"
        )
        
        st.subheader("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        st.markdown("*–°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∏–¥—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start*")
        
        welcome_message = st.text_area(
            "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
            value=instruction_data.get("welcome_message", ""),
            height=150,
            help="–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"
        )
    
    with col2:
        st.subheader("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        
        if instruction_data.get("last_updated"):
            st.info(f"**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:**\n{instruction_data['last_updated']}")
        
        st.markdown("### üîß –°—Ç–∞—Ç—É—Å")
        if os.path.exists(INSTRUCTION_FILE):
            st.success("‚úÖ –§–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞–π–¥–µ–Ω")
        else:
            st.error("‚ùå –§–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        st.markdown("### üìã –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", use_container_width=True):
            st.rerun()
        
        if st.button("üì• –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON", use_container_width=True):
            st.download_button(
                label="üíæ –°–∫–∞—á–∞—Ç—å JSON",
                data=json.dumps(instruction_data, ensure_ascii=False, indent=2),
                file_name=f"textil_pro_instructions_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json",
                mime="application/json"
            )
    
    st.markdown("---")
    
    col_save, col_preview = st.columns([1, 1])
    
    with col_save:
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", type="primary", use_container_width=True):
            new_instruction_data = {
                "system_instruction": system_instruction,
                "welcome_message": welcome_message,
                "last_updated": datetime.now().isoformat()
            }
            
            if save_instruction(new_instruction_data):
                st.success("‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
                st.balloons()
            else:
                st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π")
    
    with col_preview:
        if st.button("üëÅÔ∏è –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä", use_container_width=True):
            st.markdown("### üîç –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä")
            
            with st.expander("–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", expanded=True):
                st.markdown(f"```\n{system_instruction}\n```")
            
            with st.expander("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", expanded=True):
                st.markdown(welcome_message)
    
    st.markdown("---")
    st.markdown("### üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    
    with st.expander("–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å—é"):
        st.markdown("""
        1. **–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è** - –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –±–æ—Ç–∞
        2. **–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ** - —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
        3. **–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è** - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        4. **–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä** - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å
        5. –ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/reload` –≤ –±–æ—Ç–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        """)
    
    with st.expander("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"):
        st.markdown("""
        - `/start` - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        - `/help` - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
        - `/reload` - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        """)


if __name__ == "__main__":
    main()