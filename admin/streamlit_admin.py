import streamlit as st
import json
import os
import sys
from datetime import datetime
from streamlit_ace import st_ace

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from admin.config import INSTRUCTION_FILE, DEFAULT_INSTRUCTION, STREAMLIT_CONFIG
from admin.auth import check_password, show_auth_info
from admin.deploy_integration import show_deploy_status, DeployManager


def load_instruction():
    try:
        with open(INSTRUCTION_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        default_data = DEFAULT_INSTRUCTION.copy()
        default_data["last_updated"] = datetime.now().isoformat()
        return default_data


def save_instruction(instruction_data):
    try:
        instruction_data["last_updated"] = datetime.now().isoformat()
        with open(INSTRUCTION_FILE, 'w', encoding='utf-8') as f:
            json.dump(instruction_data, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
        return False


def main():
    st.set_page_config(
        page_title=STREAMLIT_CONFIG['page_title'],
        page_icon=STREAMLIT_CONFIG['page_icon'],
        layout=STREAMLIT_CONFIG['layout'],
        initial_sidebar_state="expanded"
    )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if not check_password():
        return
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
    st.title("ü§ñ Textil PRO Bot - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –¥–µ–ø–ª–æ–µ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    show_auth_info()
    deploy_manager = show_deploy_status()
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    tab1, tab2, tab3 = st.tabs(["üìù –†–µ–¥–∞–∫—Ç–æ—Ä", "üîç –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"])
    
    if not os.path.exists(INSTRUCTION_FILE):
        st.warning("‚ö†Ô∏è –§–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.")
    
    instruction_data = load_instruction()
    
    with tab1:
        st.header("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞")
        
        # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        edit_mode = st.radio(
            "–†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
            ["üñäÔ∏è –û–±—ã—á–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä", "‚ö° –ö–æ–¥-—Ä–µ–¥–∞–∫—Ç–æ—Ä"],
            horizontal=True
        )
        
        col1, col2 = st.columns([2, 1])
        
        with col1:
            st.subheader("–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
            st.markdown("*–û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è AI-–∞–≥–µ–Ω—Ç–∞*")
            
            if edit_mode == "‚ö° –ö–æ–¥-—Ä–µ–¥–∞–∫—Ç–æ—Ä":
                system_instruction = st_ace(
                    value=instruction_data.get("system_instruction", ""),
                    language='text',
                    theme='github',
                    height=400,
                    key="system_instruction_ace",
                    auto_update=True
                )
            else:
                system_instruction = st.text_area(
                    "–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:",
                    value=instruction_data.get("system_instruction", ""),
                    height=400,
                    help="–≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–æ—Ç–∞"
                )
            
            st.subheader("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            st.markdown("*–°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∏–¥—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start*")
            
            if edit_mode == "‚ö° –ö–æ–¥-—Ä–µ–¥–∞–∫—Ç–æ—Ä":
                welcome_message = st_ace(
                    value=instruction_data.get("welcome_message", ""),
                    language='text',
                    theme='github',
                    height=150,
                    key="welcome_message_ace",
                    auto_update=True
                )
            else:
                welcome_message = st.text_area(
                    "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
                    value=instruction_data.get("welcome_message", ""),
                    height=150,
                    help="–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"
                )
        
        with col2:
            st.subheader("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            
            if instruction_data.get("last_updated"):
                st.info(f"**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:**\n{instruction_data['last_updated']}")
            
            st.markdown("### üîß –°—Ç–∞—Ç—É—Å")
            if os.path.exists(INSTRUCTION_FILE):
                st.success("‚úÖ –§–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞–π–¥–µ–Ω")
            else:
                st.error("‚ùå –§–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            st.markdown("### üìã –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
            
            if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", use_container_width=True):
                st.rerun()
            
            st.download_button(
                label="üì• –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON",
                data=json.dumps(instruction_data, ensure_ascii=False, indent=2),
                file_name=f"textil_pro_instructions_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json",
                mime="application/json",
                use_container_width=True
            )
            
            # –ò–º–ø–æ—Ä—Ç JSON
            uploaded_file = st.file_uploader(
                "üì§ –ò–º–ø–æ—Ä—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π",
                type=['json'],
                help="–ó–∞–≥—Ä—É–∑–∏—Ç–µ JSON —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏"
            )
            
            if uploaded_file is not None:
                try:
                    imported_data = json.load(uploaded_file)
                    if st.button("üîÑ –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–º–ø–æ—Ä—Ç", use_container_width=True):
                        if save_instruction(imported_data):
                            st.success("‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!")
                            st.rerun()
                except json.JSONDecodeError:
                    st.error("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON —Ñ–∞–π–ª")
        
        st.markdown("---")
        
        # –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        col_save, col_deploy, col_preview = st.columns([1, 1, 1])
        
        with col_save:
            if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ", use_container_width=True):
                new_instruction_data = {
                    "system_instruction": system_instruction,
                    "welcome_message": welcome_message,
                    "last_updated": datetime.now().isoformat()
                }
                
                if save_instruction(new_instruction_data):
                    st.success("‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ!")
                else:
                    st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏")
        
        with col_deploy:
            if st.button("üöÄ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –∑–∞–¥–µ–ø–ª–æ–∏—Ç—å", type="primary", use_container_width=True):
                new_instruction_data = {
                    "system_instruction": system_instruction,
                    "welcome_message": welcome_message,
                    "last_updated": datetime.now().isoformat()
                }
                
                if save_instruction(new_instruction_data):
                    st.success("‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
                    
                    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π
                    commit_message = f"Update bot instructions via admin panel\n\n- Modified system instruction\n- Updated welcome message\n- Last updated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\nü§ñ Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>"
                    
                    if deploy_manager.auto_deploy_changes(commit_message):
                        st.balloons()
                    
                else:
                    st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏")
        
        with col_preview:
            if st.button("üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", use_container_width=True):
                st.session_state["show_preview"] = True
    
    with tab2:
        st.header("üîç –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä")
        
        if st.session_state.get("show_preview", False):
            current_system = instruction_data.get("system_instruction", "")
            current_welcome = instruction_data.get("welcome_message", "")
        else:
            current_system = instruction_data.get("system_instruction", "")
            current_welcome = instruction_data.get("welcome_message", "")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("üìú –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
            with st.container():
                st.markdown(f"```\n{current_system}\n```")
        
        with col2:
            st.subheader("üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            with st.container():
                st.markdown(current_welcome)
    
    with tab3:
        st.header("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
            st.markdown("""
            1. **–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è** - –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –±–æ—Ç–∞
            2. **–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ** - —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start  
            3. **–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ** - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–µ–∑ –¥–µ–ø–ª–æ—è
            4. **–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –∑–∞–¥–µ–ø–ª–æ–∏—Ç—å** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –Ω–∞ Railway
            5. **–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä** - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å
            """)
            
            st.subheader("üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã")
            st.markdown("""
            - **–û–±—ã—á–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä** - –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
            - **–ö–æ–¥-—Ä–µ–¥–∞–∫—Ç–æ—Ä** - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π
            """)
        
        with col2:
            st.subheader("ü§ñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞")
            st.markdown("""
            - `/start` - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            - `/help` - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
            - `/reload` - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
            """)
            
            st.subheader("üöÄ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–ª–æ–µ")
            st.markdown("""
            - –ò–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ Railway
            - –ü—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è –∑–∞–Ω–∏–º–∞–µ—Ç 2-3 –º–∏–Ω—É—Ç—ã
            - –°—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
            """)


if __name__ == "__main__":
    main()