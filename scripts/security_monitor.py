#!/usr/bin/env python3
"""
üîí Security Monitor –¥–ª—è Telegram Bot
–†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±–æ—Ç–∞ –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö
"""

import os
import requests
import json
from datetime import datetime
import sys

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
EXPECTED_WEBHOOK = "https://bot-production-472c.up.railway.app/webhook"
ADMIN_CHAT_ID = os.getenv('ADMIN_CHAT_ID', '')  # –í–∞—à Telegram ID –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

def check_webhook_security():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ webhook –Ω–∞ –≤–∑–ª–æ–º"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/getWebhookInfo"
    
    try:
        response = requests.get(url, timeout=10)
        data = response.json()
        
        if not data.get('ok'):
            return {
                'status': 'ERROR',
                'message': '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook'
            }
        
        webhook_info = data.get('result', {})
        current_webhook = webhook_info.get('url', '')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
        if not current_webhook:
            return {
                'status': 'WARNING',
                'message': 'Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!'
            }
        
        if current_webhook != EXPECTED_WEBHOOK:
            return {
                'status': 'CRITICAL',
                'message': f'‚ö†Ô∏è –í–ó–õ–û–ú! Webhook –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {current_webhook}',
                'malicious_webhook': current_webhook,
                'ip_address': webhook_info.get('ip_address', 'Unknown')
            }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏
        last_error = webhook_info.get('last_error_message', '')
        if last_error:
            return {
                'status': 'WARNING', 
                'message': f'–û—à–∏–±–∫–∞ webhook: {last_error}'
            }
        
        return {
            'status': 'OK',
            'message': 'Webhook –±–µ–∑–æ–ø–∞—Å–µ–Ω',
            'webhook': current_webhook,
            'pending_updates': webhook_info.get('pending_update_count', 0)
        }
        
    except Exception as e:
        return {
            'status': 'ERROR',
            'message': f'–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {str(e)}'
        }

def send_alert(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É"""
    if not ADMIN_CHAT_ID:
        return
    
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {
        'chat_id': ADMIN_CHAT_ID,
        'text': f"üîí Security Alert\n\n{message}",
        'parse_mode': 'HTML'
    }
    
    try:
        requests.post(url, json=data, timeout=5)
    except:
        pass

def restore_webhook():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ webhook –ø—Ä–∏ –≤–∑–ª–æ–º–µ"""
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–π webhook
    delete_url = f"https://api.telegram.org/bot{BOT_TOKEN}/deleteWebhook"
    requests.get(delete_url, timeout=5)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π webhook
    set_url = f"https://api.telegram.org/bot{BOT_TOKEN}/setWebhook"
    data = {
        'url': EXPECTED_WEBHOOK,
        'secret_token': os.getenv('WEBHOOK_SECRET_TOKEN', 'textil_pro_business_secret_2025'),
        'allowed_updates': [
            "message",
            "business_connection",
            "business_message",
            "edited_business_message",
            "deleted_business_messages"
        ]
    }
    
    response = requests.post(set_url, json=data, timeout=10)
    return response.json()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print(f"\nüîí Security Check - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    result = check_webhook_security()
    
    print(f"Status: {result['status']}")
    print(f"Message: {result['message']}")
    
    if result['status'] == 'CRITICAL':
        print("\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù –í–ó–õ–û–ú!")
        print(f"–í—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–π webhook: {result.get('malicious_webhook', 'Unknown')}")
        print(f"IP –∞–¥—Ä–µ—Å –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞: {result.get('ip_address', 'Unknown')}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        alert_message = (
            f"<b>‚ö†Ô∏è –ë–û–¢ –í–ó–õ–û–ú–ê–ù!</b>\n\n"
            f"Webhook –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:\n<code>{result.get('malicious_webhook', '')}</code>\n"
            f"IP: <code>{result.get('ip_address', '')}</code>\n\n"
            f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ..."
        )
        send_alert(alert_message)
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
        print("\nüîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook...")
        restore_result = restore_webhook()
        
        if restore_result.get('ok'):
            print("‚úÖ Webhook –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            send_alert("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:", restore_result)
            send_alert(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {restore_result}")
    
    elif result['status'] == 'WARNING':
        print(f"\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {result['message']}")
        send_alert(f"‚ö†Ô∏è {result['message']}")
    
    elif result['status'] == 'OK':
        print(f"‚úÖ –í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ!")
        print(f"Webhook: {result.get('webhook', '')}")
        print(f"–û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {result.get('pending_updates', 0)}")
    
    print("=" * 50)
    
    return 0 if result['status'] == 'OK' else 1

if __name__ == "__main__":
    sys.exit(main())