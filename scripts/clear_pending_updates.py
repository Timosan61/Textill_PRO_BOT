#!/usr/bin/env python3
"""
üîß –û—á–∏—Å—Ç–∫–∞ –Ω–∞–∫–æ–ø–∏–≤—à–∏—Ö—Å—è pending updates –≤ Telegram Bot API
–ó–∞–ø—É—Å–∫–∞—Ç—å –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –¥–µ–ø–ª–æ–µ–º –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∞–≤–∏–Ω—ã —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import os
import requests
import json
from datetime import datetime
import sys

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

if not BOT_TOKEN:
    print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    sys.exit(1)

def get_webhook_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook –∏ pending updates"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/getWebhookInfo"
    
    try:
        response = requests.get(url, timeout=10)
        data = response.json()
        
        if data.get('ok'):
            webhook_info = data.get('result', {})
            return {
                'url': webhook_info.get('url', ''),
                'pending_update_count': webhook_info.get('pending_update_count', 0),
                'last_error_date': webhook_info.get('last_error_date'),
                'last_error_message': webhook_info.get('last_error_message', '')
            }
        else:
            return {'error': data.get('description', 'Unknown error')}
            
    except Exception as e:
        return {'error': str(e)}

def clear_pending_updates():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö pending updates —á–µ—Ä–µ–∑ deleteWebhook + setWebhook"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–∞–∫–æ–ø–∏–≤—à–∏—Ö—Å—è pending updates...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    webhook_info = get_webhook_info()
    
    if 'error' in webhook_info:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è webhook info: {webhook_info['error']}")
        return False
    
    current_url = webhook_info.get('url', '')
    pending_count = webhook_info.get('pending_update_count', 0)
    
    print(f"üìä –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    print(f"   Webhook URL: {current_url}")
    print(f"   Pending updates: {pending_count}")
    
    if pending_count == 0:
        print("‚úÖ –ù–µ—Ç –Ω–∞–∫–æ–ø–∏–≤—à–∏—Ö—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
        return True
    
    print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {pending_count} –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
    print("üîÑ –í—ã–ø–æ–ª–Ω—è—é –æ—á–∏—Å—Ç–∫—É...")
    
    try:
        # –®–∞–≥ 1: –£–¥–∞–ª—è–µ–º webhook (—ç—Ç–æ –æ—á–∏—Å—Ç–∏—Ç pending updates)
        delete_url = f"https://api.telegram.org/bot{BOT_TOKEN}/deleteWebhook"
        delete_data = {
            'drop_pending_updates': True  # –ö–õ–Æ–ß–ï–í–û–ô –ü–ê–†–ê–ú–ï–¢–† –¥–ª—è –æ—á–∏—Å—Ç–∫–∏!
        }
        
        delete_response = requests.post(delete_url, json=delete_data, timeout=10)
        delete_result = delete_response.json()
        
        if not delete_result.get('ok'):
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {delete_result}")
            return False
            
        print("‚úÖ Webhook —É–¥–∞–ª–µ–Ω, pending updates –æ—á–∏—â–µ–Ω—ã")
        
        # –®–∞–≥ 2: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook (–µ—Å–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
        if current_url:
            print(f"üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: {current_url}")
            
            set_url = f"https://api.telegram.org/bot{BOT_TOKEN}/setWebhook"
            set_data = {
                'url': current_url,
                'secret_token': os.getenv('WEBHOOK_SECRET_TOKEN', 'textil_pro_business_secret_2025'),
                'allowed_updates': [
                    "message",
                    "business_connection",
                    "business_message", 
                    "edited_business_message",
                    "deleted_business_messages"
                ]
            }
            
            set_response = requests.post(set_url, json=set_data, timeout=10)
            set_result = set_response.json()
            
            if set_result.get('ok'):
                print("‚úÖ Webhook –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                new_info = get_webhook_info()
                if 'error' not in new_info:
                    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏:")
                    print(f"   Pending updates: {new_info.get('pending_update_count', 0)}")
                    
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è webhook: {set_result}")
                return False
        else:
            print("‚ÑπÔ∏è  Webhook –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"\nüßπ –û—á–∏—Å—Ç–∫–∞ Pending Updates - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook –¥–æ –æ—á–∏—Å—Ç–∫–∏
    print("üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
    webhook_info = get_webhook_info()
    
    if 'error' in webhook_info:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook: {webhook_info['error']}")
        return 1
    
    pending_count = webhook_info.get('pending_update_count', 0)
    
    if pending_count == 0:
        print("‚úÖ –ù–∞–∫–æ–ø–∏–≤—à–∏—Ö—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç - –æ—á–∏—Å—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        return 0
    
    print(f"‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {pending_count} –Ω–∞–∫–æ–ø–∏–≤—à–∏—Ö—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É –æ—á–∏—Å—Ç–∫–∏...")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
    success = clear_pending_updates()
    
    if success:
        print("\n" + "=" * 60)
        print("‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û")
        print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
        print("=" * 60)
        return 0
    else:
        print("\n" + "=" * 60)
        print("‚ùå –û–®–ò–ë–ö–ê –û–ß–ò–°–¢–ö–ò")
        print("‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram API")
        print("=" * 60)
        return 1

if __name__ == "__main__":
    sys.exit(main())